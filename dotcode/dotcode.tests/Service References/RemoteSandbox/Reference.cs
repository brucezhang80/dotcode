//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace dotcode.tests.RemoteSandbox {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SandboxInput", Namespace="http://schemas.datacontract.org/2004/07/dotcode.lib.common.Sandbox")]
    [System.SerializableAttribute()]
    public partial class SandboxInput : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] AssemblyBytesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntryPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MainClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private dotcode.tests.RemoteSandbox.SandboxSetup SandboxSetupField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] AssemblyBytes {
            get {
                return this.AssemblyBytesField;
            }
            set {
                if ((object.ReferenceEquals(this.AssemblyBytesField, value) != true)) {
                    this.AssemblyBytesField = value;
                    this.RaisePropertyChanged("AssemblyBytes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntryPoint {
            get {
                return this.EntryPointField;
            }
            set {
                if ((object.ReferenceEquals(this.EntryPointField, value) != true)) {
                    this.EntryPointField = value;
                    this.RaisePropertyChanged("EntryPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MainClass {
            get {
                return this.MainClassField;
            }
            set {
                if ((object.ReferenceEquals(this.MainClassField, value) != true)) {
                    this.MainClassField = value;
                    this.RaisePropertyChanged("MainClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public dotcode.tests.RemoteSandbox.SandboxSetup SandboxSetup {
            get {
                return this.SandboxSetupField;
            }
            set {
                if ((object.ReferenceEquals(this.SandboxSetupField, value) != true)) {
                    this.SandboxSetupField = value;
                    this.RaisePropertyChanged("SandboxSetup");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SandboxSetup", Namespace="http://schemas.datacontract.org/2004/07/dotcode.lib.common.Sandbox")]
    [System.SerializableAttribute()]
    public partial class SandboxSetup : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowNetworkingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowPersistentStorageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] CommandLineArgsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MemoryLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long OutputLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TimeLimitField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowNetworking {
            get {
                return this.AllowNetworkingField;
            }
            set {
                if ((this.AllowNetworkingField.Equals(value) != true)) {
                    this.AllowNetworkingField = value;
                    this.RaisePropertyChanged("AllowNetworking");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowPersistentStorage {
            get {
                return this.AllowPersistentStorageField;
            }
            set {
                if ((this.AllowPersistentStorageField.Equals(value) != true)) {
                    this.AllowPersistentStorageField = value;
                    this.RaisePropertyChanged("AllowPersistentStorage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] CommandLineArgs {
            get {
                return this.CommandLineArgsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommandLineArgsField, value) != true)) {
                    this.CommandLineArgsField = value;
                    this.RaisePropertyChanged("CommandLineArgs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MemoryLimit {
            get {
                return this.MemoryLimitField;
            }
            set {
                if ((this.MemoryLimitField.Equals(value) != true)) {
                    this.MemoryLimitField = value;
                    this.RaisePropertyChanged("MemoryLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long OutputLimit {
            get {
                return this.OutputLimitField;
            }
            set {
                if ((this.OutputLimitField.Equals(value) != true)) {
                    this.OutputLimitField = value;
                    this.RaisePropertyChanged("OutputLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TimeLimit {
            get {
                return this.TimeLimitField;
            }
            set {
                if ((this.TimeLimitField.Equals(value) != true)) {
                    this.TimeLimitField = value;
                    this.RaisePropertyChanged("TimeLimit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SandboxOutput", Namespace="http://schemas.datacontract.org/2004/07/dotcode.lib.common.Sandbox")]
    [System.SerializableAttribute()]
    public partial class SandboxOutput : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ExecutionTimeMillisecField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PeakMemoryUsageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StdoutField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ExecutionTimeMillisec {
            get {
                return this.ExecutionTimeMillisecField;
            }
            set {
                if ((this.ExecutionTimeMillisecField.Equals(value) != true)) {
                    this.ExecutionTimeMillisecField = value;
                    this.RaisePropertyChanged("ExecutionTimeMillisec");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PeakMemoryUsage {
            get {
                return this.PeakMemoryUsageField;
            }
            set {
                if ((this.PeakMemoryUsageField.Equals(value) != true)) {
                    this.PeakMemoryUsageField = value;
                    this.RaisePropertyChanged("PeakMemoryUsage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Stdout {
            get {
                return this.StdoutField;
            }
            set {
                if ((object.ReferenceEquals(this.StdoutField, value) != true)) {
                    this.StdoutField = value;
                    this.RaisePropertyChanged("Stdout");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RemoteSandbox.IRemoteSandbox")]
    public interface IRemoteSandbox {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemoteSandbox/Execute", ReplyAction="http://tempuri.org/IRemoteSandbox/ExecuteResponse")]
        dotcode.tests.RemoteSandbox.SandboxOutput Execute(dotcode.tests.RemoteSandbox.SandboxInput sandboxInput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemoteSandbox/Execute", ReplyAction="http://tempuri.org/IRemoteSandbox/ExecuteResponse")]
        System.Threading.Tasks.Task<dotcode.tests.RemoteSandbox.SandboxOutput> ExecuteAsync(dotcode.tests.RemoteSandbox.SandboxInput sandboxInput);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRemoteSandboxChannel : dotcode.tests.RemoteSandbox.IRemoteSandbox, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemoteSandboxClient : System.ServiceModel.ClientBase<dotcode.tests.RemoteSandbox.IRemoteSandbox>, dotcode.tests.RemoteSandbox.IRemoteSandbox {
        
        public RemoteSandboxClient() {
        }
        
        public RemoteSandboxClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RemoteSandboxClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RemoteSandboxClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RemoteSandboxClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public dotcode.tests.RemoteSandbox.SandboxOutput Execute(dotcode.tests.RemoteSandbox.SandboxInput sandboxInput) {
            return base.Channel.Execute(sandboxInput);
        }
        
        public System.Threading.Tasks.Task<dotcode.tests.RemoteSandbox.SandboxOutput> ExecuteAsync(dotcode.tests.RemoteSandbox.SandboxInput sandboxInput) {
            return base.Channel.ExecuteAsync(sandboxInput);
        }
    }
}
